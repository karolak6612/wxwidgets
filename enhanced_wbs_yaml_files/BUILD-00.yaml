id: BUILD-00
section: Build, Deployment, & Documentation
title: Create Root CMakeLists.txt and Basic Project Structure
original_input_files: []
analyzed_input_files:
  - file_path: N/A - Project Requirements
    description: This task creates the foundational CMakeLists.txt from scratch. Input
      is the overall requirement for a C++17 Qt6 project using CMake, targeting
      Windows, Linux, and macOS. It must support a core library (mapcore) and an
      application executable. It also needs to prepare for Qt6 Widgets, OpenGL,
      and Qlementine integration.
dependencies: []
current_functionality_summary: No CMake build system currently exists for the project.
  The legacy build process is undefined or IDE-specific. This task initiates the
  migration to a CMake-based build.
qt6_migration_steps: |-
  1. Create the root `CMakeLists.txt` file.
  2. Specify `cmake_minimum_required(VERSION 3.16)`.
  3. Define the project: `project(TibiaMapEditorQt VERSION 1.0 LANGUAGES CXX)`.
  4. Set the C++ standard: `set(CMAKE_CXX_STANDARD 17)`, `set(CMAKE_CXX_STANDARD_REQUIRED ON)`.
  5. Find Qt6 core components: `find_package(Qt6 REQUIRED COMPONENTS Core Gui Widgets OpenGL)` and link them generally or to specific targets later.
  6. Set `CMAKE_AUTOMOC ON`, `CMAKE_AUTORCC ON`, `CMAKE_AUTOUIC ON`.
  7. Define basic include directories: `include_directories(src)`.
  8. Add a placeholder for the main application executable: `add_executable(TibiaMapEditorQt src/main.cpp)` (actual sources to be populated by other tasks).
  9. Target Qt6 components to the executable: `target_link_libraries(TibiaMapEditorQt PRIVATE Qt6::Core Qt6::Gui Qt6::Widgets Qt6::OpenGL)`.
  10. Define a subdirectory for a future `mapcore` library: `add_subdirectory(src/mapcore)` (CMakeLists.txt within `src/mapcore` will define the library itself).
  11. Enable testing with CTest: `enable_testing()`, `add_subdirectory(tests)` (if tests are planned in a separate directory).
definition_of_done: |-
  - A root `CMakeLists.txt` file is created in the project's root directory.
  - The CMake project can be configured (e.g., `cmake .`) without errors, correctly finding Qt6.
  - Basic project structure for an executable and a `mapcore` library is laid out.
  - C++17 standard is enforced.
  - Qt automoc, autorcc, autouic are enabled.
boilerplate_coder_ai_prompt: |-
  Create the root `CMakeLists.txt` file for a new Qt6 C++17 project named "TibiaMapEditorQt".
  The CMake version should be at least 3.16.
  Ensure C++17 is set as the required standard.
  The project will use Qt6 (Core, Gui, Widgets, OpenGL components initially). Enable AUTOMOC, AUTORCC, and AUTOUIC.
  Define an executable target "TibiaMapEditorQt" with a placeholder source `src/main.cpp`. Link it against the necessary Qt6 libraries.
  Add a subdirectory `src/mapcore` (for a future static library) and `tests` (for CTest). Enable CTest.
  Provide basic include directories like `src`.
documentation_references:
  - https://cmake.org/cmake/help/latest/command/project.html
  - https://cmake.org/cmake/help/latest/command/cmake_minimum_required.html
  - https://cmake.org/cmake/help/latest/prop_tgt/CXX_STANDARD.html
  - https://doc.qt.io/qt-6/cmake-manual.html
  - https://cmake.org/cmake/help/latest/command/add_executable.html
  - https://cmake.org/cmake/help/latest/command/add_subdirectory.html
  - https://cmake.org/cmake/help/latest/module/CTest.html
estimation_effort: Small (1-2 developer days)
