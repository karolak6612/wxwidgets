id: UI-10
section: UI Elements
title: Define RAW Items Palette and Terrain Brushes Palette
original_input_files:
  - XML/760/raw_palette.xml
  - XML/760/grounds.xml
  - XML/760/walls.xml
  - XML/760/tilesets.xml
  - XML/760/doodads.xml
  - wxwidgets/palette_brushlist.cpp
  - wxwidgets/palette_window.cpp
analyzed_input_files:
  - file_path: XML/760/raw_palette.xml
    description: Defines the list of RAW items available for selection in a dedicated
      palette. Each entry typically specifies an item ID.
  - file_path: XML/760/grounds.xml
    description: Defines ground brushes, including their item IDs and potentially
      properties relevant for palette display and brush behavior.
  - file_path: XML/760/walls.xml
    description: Defines wall brushes, their item IDs, and properties for palette
      display and auto-bordering logic.
  - file_path: XML/760/tilesets.xml
    description: Defines tilesets, which group various terrain elements (grounds,
      walls, doodads) that would be displayed in a terrain palette, often hierarchically
      or categorized.
  - file_path: XML/760/doodads.xml
    description: Defines doodad brushes. While some might be general, others could
      be terrain-specific and appear in a terrain palette section.
  - file_path: wxwidgets/palette_brushlist.cpp
    description: Contains generic logic for displaying lists or grids of brushes,
      handling selection, and potentially common UI elements like search/filter
      that would be adapted for RAW and Terrain palettes. (Analysis based on its
      role as a generic component for brush display).
  - file_path: wxwidgets/palette_window.cpp
    description: Manages the overall palette window structure, typically using a wxChoicebook
      or similar to host different palette tabs/categories. The RAW and Terrain
      palettes would be integrated into this main structure. (Analysis based on
      its role as the main palette container).
dependencies:
  - UI-01
  - UI-02
  - CORE-01
  - CORE-02
  - LOGIC-02
  - LOGIC-03
  - LOGIC-04
  - LOGIC-01
current_functionality_summary: |
  RAW items and various terrain brushes (grounds, walls, etc.) are likely selected in the legacy UI through dedicated palette sections. These sections would list items/brushes parsed from their respective XML definitions (`raw_palette.xml`, `grounds.xml`, `walls.xml`, `tilesets.xml`). The `palette_brushlist.cpp` and `palette_window.cpp` provide the general framework for displaying such lists and integrating them into the main palette UI.
qt6_migration_steps: |-
  1. Design and implement a `RawItemsPaletteQt` tab/widget.
     - Parse `XML/760/raw_palette.xml` (using `QXmlStreamReader`).
     - Display RAW items (e.g., using `QListView` with icons or a custom `QAbstractItemView` for richer display).
     - Allow selection of a RAW item to activate the RAW brush.
  2. Design and implement a `TerrainBrushPaletteQt` tab/widget.
     - This palette might have sub-sections or filters for different terrain brush types (Grounds, Walls, Doodads from Tilesets, etc.).
     - Parse `XML/760/grounds.xml`, `XML/760/walls.xml`, `XML/760/tilesets.xml`, `XML/760/doodads.xml` (for terrain doodads) for brush definitions.
     - Display terrain brushes, allowing selection to activate the corresponding specialized brush (e.g., GroundBrush, WallBrush).
  3. Ensure both palettes integrate into the main palette system (defined in `UI-02`).
  4. Connect palette selections to a `BrushManager` or directly update the `EditorController`'s active brush state.
definition_of_done: |-
  - `RawItemsPaletteQt` correctly loads and displays items from `raw_palette.xml`.
  - `TerrainBrushPaletteQt` correctly loads and displays ground, wall, and other terrain-related brushes from their XML definitions.
  - Users can select items/brushes from these palettes to activate them for drawing.
  - Palettes are integrated into the main UI's palette system.
boilerplate_coder_ai_prompt: |-
  Implement two Qt palette tabs: `RawItemsPaletteQt` and `TerrainBrushPaletteQt`.
  `RawItemsPaletteQt`:
    - Parse `XML/760/raw_palette.xml`.
    - Display RAW items for selection (e.g., in a `QListView` or custom grid).
    - Selecting an item should activate the generic RAW brush with the chosen item ID.
  `TerrainBrushPaletteQt`:
    - Parse `XML/760/grounds.xml`, `XML/760/walls.xml`, `XML/760/tilesets.xml` (and `doodads.xml` for terrain-specific doodads).
    - Provide a way to display and select these terrain brushes (e.g., categorized lists or grids).
    - Selecting a brush should activate the appropriate specialized brush (GroundBrush, WallBrush, etc.).
  Integrate both palettes into the main application palette system. Connect selections to update the active brush in the editor.
documentation_references:
  - https://doc.qt.io/qt-6/qlistview.html
  - https://doc.qt.io/qt-6/qabstractitemview.html
  - https://doc.qt.io/qt-6/qxmlstreamreader.html
estimation_effort: Large (10-15 developer days)
