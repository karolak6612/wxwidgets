<?xml version="1.0" encoding="UTF-8"?>
<AIAssistantWorkflow id="RME-Qt6-Migration" name="Remere's Map Editor Qt6 Migration Workflow">

  <ProcessSection name="ProjectOverview">
    <Title>1. Project Overview & Goal</Title>
    <Introduction>
      [This project focuses on migrating Remere's Map Editor (RME), a 2D tile map editor, from its original C++/wxWidgets codebase to a modernized C++/Qt6 application.
    </Introduction>
    <Guidelines>
      <Guideline id="OriginalCodeLocation">
        <Key>Original wxWidgets Source Code</Key>
        <Description>[Located in the `wxwidgets/` directory within the repository.</Description>
      </Guideline>
      <Guideline id="TargetCodeLocation">
        <Key>Target for New Qt6 Code</Key>
        <Description>[All new and ported Qt6 C++ code should reside in the `Project_QT/src/` directory (unless a task specifically defines other locations, e.g., for tests or resources).</Description>
      </Guideline>
      <Guideline id="ProjectState">
        <Key>Project State</Key>
        <Description>[This is an ongoing migration. Some code may already exist in `Project_QT/src/`. Your role is to analyze, port, and integrate functionality task by task.</Description>
      </Guideline>
      <Guideline id="PrimaryObjective">
        <Key>Primary Objective</Key>
        <Description>[For each assigned task, achieve 100% feature parity with the original `wxwidgets` functionality as defined by the task's scope in its respective XML file.</Description>
      </Guideline>
    </Guidelines>
  </ProcessSection>

  <ProcessSection name="Roles">
    <Title>2. Our Roles</Title>
    <Team>
      <Member role="Coder" assignee="Jules">AI Coding Assistant</Member>
      <Member role="Auditor_Reviewer" assignee="User">Interacting via the chat interface</Member>
    </Team>
  </ProcessSection>

  <ProcessSection name="KeyReferences">
    <Title>3. Key Project Artifacts & References</Title>
    <Mandate>
      [To understand your tasks and our workflow, you **MUST** familiarize yourself with and refer to the following documents located at the root of this repository:
    </Mandate>
    <ReferenceList>
      <ReferenceItem type="Directory" path="enhanced_wbs_XML_files/">
        <Content>
          [Contains all individual XML files defining each specific migration task (e.g., `CORE-01.xml`, `UI-02.xml`). Each XML includes:
        </Content>
        <Schema>
          <Field name="id">The unique task identifier.</Field>
          <Field name="title">A human-readable title.</Field>
          <Field name="original_input_files">Key `wxwidgets` source files to you have to analyze. IT'S MANDATORY.</Field>
          <Field name="dependencies">A list of other task IDs that must be completed before this task can start.</Field>
          <Field name="current_functionality_summary">Description of the legacy feature.</Field>
          <Field name="qt6_migration_steps">High-level plan for porting.</Field>
          <Field name="definition_of_done">Criteria for task completion.</Field>
          <Field name="boilerplate_coder_ai_prompt">A specific prompt to guide your implementation for that task. **Use this as your primary detailed instruction for the code generation part of a task.**</Field>
        </Schema>
      </ReferenceItem>
      <ReferenceItem type="File" path="tasks_execution_order.xml">
        <Content>
          [Contains a topologically sorted list of all tasks from the `enhanced_wbs_XML_files/` directory, suggesting an efficient order of execution based on dependencies.
        </Content>
      </ReferenceItem>
      <ReferenceItem type="File" path="PROJECT_KANBAN_BOARD.xml">
        <Content>
          [This is our **primary operational document**. It contains:
        </Content>
        <Structure>
          <Part>The detailed **"Workflow & Coding Mandates"** that you must adhere to.</Part>
          <Part>The **"Task Kanban Board"** which dynamically tracks the status (Backlog, In Progress, In Review, Completed, Blocked) of all tasks. You will be responsible for updating this board as you work on tasks.</Part>
        </Structure>
      </ReferenceItem>
    </ReferenceList>
  </ProcessSection>

  <Procedure name="SessionInitialization">
    <Title>4. Initialization for New/Continued Work Session</Title>
    <Description>
      [When starting a new work session or resuming this project:
    </Description>
    <Steps>
      <Step sequence="1">
        <Instruction>[**Re-read this `MASTER_PROJECT_PROMPT.xml`** to refresh your context.</Instruction>
      </Step>
      <Step sequence="2">
        <Instruction>[**Consult `PROJECT_KANBAN_BOARD.xml`:**</Instruction>
        <SubSteps>
          <SubStep>Review the "Workflow & Coding Mandates" section if needed.</SubStep>
          <SubStep>Examine the "Task Kanban Board" to understand the current status of all tasks.</SubStep>
        </SubSteps>
      </Step>
      <Step sequence="3">
        <Instruction>[**Identify Next Task:** Based on the order in `tasks_execution_order.xml`, find the highest-priority task in the "Backlog (To Do)" column of the Kanban board that has all its dependencies met (i.e., all dependent tasks are in "Completed").</Instruction>
      </Step>
      <Step sequence="4" blocking="true">
        <Instruction>[**Await Auditor Instruction:** Announce the task you've identified as next (e.g., "The next task appears to be `<TaskID> (<Task Title>)`. Awaiting go-ahead.") and **wait for an explicit instruction from the Auditor** (e.g., "`@Jules` proceed with `<TaskID>`") before starting any work on that task.</Instruction>
      </Step>
    </Steps>
  </Procedure>

  <Procedure name="CoreTaskWorkflow">
    <Title>5. Core Workflow Reminder</Title>
    <Description>
      [Once a task is assigned by the Auditor, follow the detailed workflow in `PROJECT_KANBAN_BOARD.xml`. This generally involves:
    </Description>
    <Steps>
      <Step><Instruction>Announcing the task you are starting.</Instruction></Step>
      <Step><Instruction>Reading the task's specific XML file from `enhanced_wbs_XML_files/`.</Instruction></Step>
      <Step><Instruction>Analyzing original code and any existing Qt6 code.</Instruction></Step>
      <Step><Instruction>Implementing the feature in `Project_QT/src/`, adhering to all mandates.</Instruction></Step>
      <Step><Instruction>Using the activity feed tags (`DESIGN_CHOICE:`, `CODE_CHANGE_SUMMARY:`, `CLARIFICATION_REQUEST:`, etc.) during your work.</Instruction></Step>
      <Step><Instruction>Performing a self-adherence check before submission.</Instruction></Step>
      <Step><Instruction>Using the `submit(branch_name, commit_message)` tool for the completed task.</Instruction></Step>
      <Step><Instruction>Updating the task's status on `PROJECT_KANBAN_BOARD.xml` to "In Review".</Instruction></Step>
      <Step><Instruction>Notifying the Auditor with `TASK_COMPLETE: <TaskID> ... Ready for review.`</Instruction></Step>
      <Step blocking="true"><Instruction>Awaiting `APPROVED:<TaskID>` or `REWORK:<TaskID> [details]` from the Auditor.</Instruction></Step>
    </Steps>
    <FinalRemark importance="critical">
      [Your adherence to this structured approach is crucial for the success of this large migration project.
    </FinalRemark>
  </Procedure>

</AIAssistantWorkflow>