<?xml version="1.0" ?>
<BRUSH-LOGIC-RAW>
  <id>BRUSH-LOGIC-RAW</id>
  <section>Editor Behavior &amp; Logic</section>
  <title>Port RAW Brush Logic</title>
  <original_input_files>
    <original_input_file>wxwidgets/raw_brush.cpp</original_input_file>
    <original_input_file>wxwidgets/raw_brush.h</original_input_file>
  </original_input_files>
  <analyzed_input_files>
    <analyzed_input_file>
      <file_path>wxwidgets/raw_brush.h</file_path>
      <description>Defines 'RAWBrush' (inherits 'Brush'). Stores 'uint16_t raw_item_id' for the item to be placed.</description>
    </analyzed_input_file>
    <analyzed_input_file>
      <file_path>wxwidgets/raw_brush.cpp</file_path>
      <description>Implements 'RAWBrush'. 'draw' places the 'raw_item_id'. 'undraw' removes items matching 'raw_item_id'.</description>
    </analyzed_input_file>
  </analyzed_input_files>
  <dependencies>
    <dependencie>CORE-BRUSH-FRAMEWORK</dependencie>
    <dependencie>CORE-01</dependencie>
    <dependencie>CORE-02</dependencie>
    <dependencie>LOGIC-01</dependencie>
    <dependencie>CORE-04</dependencie>
  </dependencies>
  <current_functionality_summary>The 'RAWBrush' places a specific item ID directly onto the map. It's used for placing any item by its ID, often selected from a RAW palette.
</current_functionality_summary>
  <qt6_migration_steps>1. Define `mapcore::RawBrush` class inheriting from `mapcore::Brush`.
2. Store `uint16_t currentItemId` (set via palette/tool settings).
3. Implement `apply()`:
   - Get target `Tile`.
   - If erasing: Find and remove an item with `currentItemId` from the tile.
   - If drawing: Create new `mapcore::Item` with `currentItemId`. Add to tile (respect stacking, etc.).
   - Record changes for undo.
</qt6_migration_steps>
  <definition_of_done>- `mapcore::RawBrush` is implemented.
- Can place and erase specific items by ID.
- Operations are undoable.
- Unit tests for RAW brush placement/removal pass.
</definition_of_done>
  <boilerplate_coder_ai_prompt>Port `RAWBrush` from `wxwidgets/raw_brush.cpp/h` to `mapcore::RawBrush`.
1. Header: `mapcore::RawBrush : public mapcore::Brush`. Store `uint16_t m_itemId;`. Method `void setItemId(uint16_t id);`.
2. Source: Implement `apply()`. Drawing: `mapcore::Item* newItem = mapcore::Item::create(m_itemId); tile-&gt;addItem(newItem);`. Erasing: `tile-&gt;removeItemOfType(m_itemId);`. All changes via `EditorControllerInterface`.
</boilerplate_coder_ai_prompt>
  <documentation_references>
    <documentation_reference>mapcore::Brush</documentation_reference>
    <documentation_reference>mapcore::Item</documentation_reference>
    <documentation_reference>mapcore::Tile</documentation_reference>
  </documentation_references>
  <estimation_effort>Medium</estimation_effort>
</BRUSH-LOGIC-RAW>
