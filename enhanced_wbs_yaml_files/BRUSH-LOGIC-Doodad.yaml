id: BRUSH-LOGIC-Doodad
section: Editor Behavior & Logic
title: Port Doodad Brush Logic
original_input_files:
  - wxwidgets/doodad_brush.cpp
  - wxwidgets/doodad_brush.h
analyzed_input_files:
  - file_path: wxwidgets/doodad_brush.h
    description: Defines 'DoodadBrush' (inherits 'Brush'). Manages a list of items ('DoodadItem') that constitute the doodad, possibly with relative offsets.
  - file_path: wxwidgets/doodad_brush.cpp
    description: Implements 'DoodadBrush'. 'draw' method places all constituent items of the doodad onto the map, relative to the clicked position. Handles potential multi-tile doodads and layering.
dependencies:
  - CORE-BRUSH-FRAMEWORK
  - CORE-01
  - CORE-02 # For ItemManager and ItemType definitions
  - LOGIC-01
  - CORE-04
  - CORE-14-MaterialSystem # Doodad definitions are loaded via MaterialManager
current_functionality_summary: |
  The 'DoodadBrush' places pre-defined single or composite Doodads (collections of items, potentially multi-tile) onto the map. Definitions are loaded from XML (likely 'doodads.xml' via MaterialManager).
qt6_migration_steps: |
  1. Define `mapcore::DoodadBrush` class inheriting from `mapcore::Brush`.
  2. Store definition of the current doodad (e.g., list of `mapcore::ItemType*` and their relative `Position` offsets), loaded from `MaterialManager`.
  3. Implement `canApply()`.
  4. Implement `apply()`:
     - If erasing: Remove all items belonging to this doodad instance placed starting at the target position.
     - If drawing: For each item in the doodad definition, calculate its target position (clicked pos + relative offset). Create and place the item on the appropriate tile.
     - Record all tile changes for undo.
definition_of_done: |
  - `mapcore::DoodadBrush` is implemented.
  - Doodad brush definitions are correctly loaded and interpreted.
  - Applying the DoodadBrush places all constituent items correctly, respecting offsets and layers.
  - Erasing a doodad removes all its parts.
  - Operations are undoable.
  - Unit tests for single and multi-tile doodad placement/removal pass.
boilerplate_coder_ai_prompt: |
  Port `DoodadBrush` from `wxwidgets/doodad_brush.cpp/h` to `mapcore::DoodadBrush`.
  1. Header: `mapcore::DoodadBrush : public mapcore::Brush`. Store the current doodad definition (e.g., a struct containing a list of item IDs and their relative `Position` offsets). Method `void setDoodadIdentifier(const QString& doodadName);` (to load definition from `MaterialManager`).
  2. Source: Implement `apply()`. When drawing, iterate through the items in the current doodad's definition. For each, calculate the target tile based on the brush's main position and the item's relative offset. Place a copy of the item on that tile. Ensure all changes are part of a single undoable command.
documentation_references: ["mapcore::Brush", "mapcore::Item", "mapcore::Tile", "CORE-14-MaterialSystem"]
estimation_effort: Large
